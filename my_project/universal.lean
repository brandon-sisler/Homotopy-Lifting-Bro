import Mathlib.Topology.Homotopy.Path
import Mathlib.Topology.PathConnected
import Mathlib.Topology.Bases
open Set

variable {X : Type _} [TopologicalSpace X] (x₀ : X) {x₁ : X }
-- def baseSet : TopologicalSpace X 

#check X

def coverSet :=
  Σ x₁ : X , Path.Homotopic.Quotient x₀ x₁

#check coverSet
#synth TopologicalSpace (Path x₀ x₁)

--example : IsOpen (univ : Cover) := 
 -- isOpen_univ

open TopologicalSpace

example (X : Type _) (s : Set (Set X)) (h : ∀ U V : Set X, U ∈ s → V ⊆ U → V ∈ s)
  (h' : ∀ x: X, ∃ U ∈ s, x ∈ U) :
    IsTopologicalBasis (t := generateFrom s) s := by
  let _ := generateFrom s
  apply isTopologicalBasis_of_open_of_nhds
  · intros u hu
    exact isOpen_generateFrom_of_mem hu
  · intros x U hx hU
    induction hU with
    | basic V hV => use V, hV, hx
    | univ => simpa using h' x
    | inter V W _ _ h₃ h₄ =>
        rcases h₃ hx.1 with ⟨R, _, hxR, hRV⟩
        rcases h₄ hx.2 with ⟨S, S_in, hxS, hSW⟩
        refine ⟨R ∩ S, ?_, ⟨hxR, hxS⟩, ?_⟩
        · exact h _ _ S_in (Set.inter_subset_right R S)
        · exact Set.inter_subset_inter hRV hSW
    | sUnion S _ hS =>
        rcases hx with ⟨T, T_in, hxT⟩
        rcases hS T T_in hxT with ⟨V, V_in, hxV, hVT⟩
        use V, V_in, hxV
        exact Set.subset_sUnion_of_subset S T hVT T_in





--Definition of local path connectedness
--(From Topology.PathConnected)

-- ∀ \gamma : Path x x , 

--When is a  U :Set X with x ∈ U ⊂ X a semi local simply connected neighborhood?

def slsc_nbhd (X: Type _)[TopologicalSpace X](x:X)(U: Set X): Prop := 
  IsOpen U ∧ (  )

-- TODO:
-- 1. Tell Lean U is a subspace of X
-- 2. indicate i^{-1}(x) : U
-- 3. Use i which we should get from 1 to create a object 
-- i ∘ γ : Path x x where \gamma : Path i^{-1}(x) i^{-1} (x)
-- 4. Prove [i ∘ γ ] = [x] where latter is the constant path at x.



class slsc_space (X: Type _)[TopologicalSpace X]  where
   slsc_nbhd_exists: ∀ x : X, ∃ U : Set X → IsOpen U → x∈ U →  slsc_nbhd X x U

  
-- To show the path connected subsets of X is a basis
--(Possibly use the basis from Topology.PathConnected)


-- Define the potential basis whose elements are slsc and path connected

def slsc_pc_nbhds (X: Type _)[TopologicalSpace X]: Set (Set X):= 
  { U : Set X | IsOpen U ∧ ∃ x: X,  x∈ U ∧   (slsc_nbhd X x U ∧ IsPathConnected U)} 

-- To show that the slsc and path connected collection is a basis when X is a locally path connected space
lemma slsc_pc_basis (X: Type _)[TopologicalSpace X](LocPathConnectedSpace X)(slsc_space X):
  IsTopologicalBasis slsc_pc_nbhds X :=by sorry

-- Define a potential basis for CoverSet using the slsc_pc_nbhds basis of X\






-- TODO:

-- 1. Construct the path space equipped with the compact open topology
-- 2. Take the quotient of the path space with respect to the equivalence relation generated by 
--    homotopy equivalence relative to boundary.
-- 3. Show that the basis Hatcher gives is a basis for the quotient of the compact open topology.
-- 4. Use Hatcher's characterization to prove that the topological space we get is simply connected and 
--    a covering space of the base space X.
-- 5. Profit?


-- Hybrid approach

-- Construct Hatcher's version of the universal cover
-- Then show that the topology it has is equivalent to the one described in Bourbaki 
-- by taking the quotient of the path space of X (equipped with the compact open topology) 
-- with repsect to homotopy equivalence rel boundary.

-- I.e.  need to show that Hatcher's basis generates the compact-open topology quotient.

-- 




#exit


Sigma 